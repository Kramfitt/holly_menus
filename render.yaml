services:
  # Web App
  - type: web
    name: menu-system
    env: python
    buildCommand: |
      echo "Starting build process..."
      
      # Debug: Show current state
      echo "Initial environment:"
      pwd
      ls -la
      echo "PATH: $PATH"
      
      # Install system packages
      echo "Installing system packages..."
      sudo apt-get update
      sudo apt-get install -y tesseract-ocr tesseract-ocr-eng libtesseract-dev libleptonica-dev poppler-utils
      
      # Verify system installation
      echo "Verifying system installation..."
      which tesseract
      tesseract --version || echo "Failed to run tesseract --version"
      
      # Create our local directories
      echo "Setting up local directories..."
      mkdir -p bin
      mkdir -p share/tessdata
      
      # Copy Tesseract binary and dependencies
      echo "Copying Tesseract files..."
      TESSERACT_BIN=$(which tesseract)
      if [ -z "$TESSERACT_BIN" ]; then
        echo "❌ Tesseract not found after installation"
        exit 1
      fi
      
      echo "Found Tesseract at: $TESSERACT_BIN"
      cp $TESSERACT_BIN bin/
      chmod +x bin/tesseract
      
      # Copy all required shared libraries
      echo "Copying shared libraries..."
      ldd $TESSERACT_BIN | grep "=> /" | awk '{print $3}' | while read -r lib; do
        cp -v "$lib" bin/
      done
      
      # Copy language data
      echo "Copying language data..."
      cp -r /usr/share/tesseract-ocr/*/tessdata/* share/tessdata/
      
      # Set up environment
      echo "Setting up environment..."
      CURRENT_DIR=$(pwd)
      echo "TESSDATA_PREFIX=$CURRENT_DIR/share/tessdata" >> $RENDER_ENV_FILE
      echo "TESSERACT_PATH=$CURRENT_DIR/bin/tesseract" >> $RENDER_ENV_FILE
      echo "LD_LIBRARY_PATH=$CURRENT_DIR/bin:$LD_LIBRARY_PATH" >> $RENDER_ENV_FILE
      
      # Export for current session
      export TESSDATA_PREFIX="$CURRENT_DIR/share/tessdata"
      export TESSERACT_PATH="$CURRENT_DIR/bin/tesseract"
      export LD_LIBRARY_PATH="$CURRENT_DIR/bin:$LD_LIBRARY_PATH"
      
      # Create test script
      cat > test_tesseract.py << 'EOL'
import os
import sys
import pytesseract
from PIL import Image, ImageDraw
import numpy as np

def test_tesseract():
    print('🔍 Testing Tesseract configuration...')
    
    # Check environment
    print(f'TESSERACT_PATH: {os.getenv("TESSERACT_PATH")}')
    print(f'TESSDATA_PREFIX: {os.getenv("TESSDATA_PREFIX")}')
    print(f'LD_LIBRARY_PATH: {os.getenv("LD_LIBRARY_PATH")}')
    
    # Create test image
    img = Image.new('RGB', (200, 50), color='white')
    draw = ImageDraw.Draw(img)
    draw.text((10, 10), "TEST OCR 123", fill='black')
    
    try:
        # Test OCR
        text = pytesseract.image_to_string(img)
        print(f'OCR Result: {text.strip()}')
        return True
    except Exception as e:
        print(f'OCR Test failed: {str(e)}')
        return False

if __name__ == '__main__':
    success = test_tesseract()
    sys.exit(0 if success else 1)
EOL
      
      # Install Python dependencies
      echo "Installing Python dependencies..."
      pip install -r requirements.txt
      
      # Test with Python
      echo "Testing with Python..."
      python test_tesseract.py
      
      echo "Build process complete!"
      
    startCommand: |
      echo "Starting application..."
      echo "Current environment:"
      env | grep -E 'TESSERACT|TESSDATA|LD_LIBRARY'
      
      # Ensure environment is set
      CURRENT_DIR=$(pwd)
      export TESSDATA_PREFIX="$CURRENT_DIR/share/tessdata"
      export TESSERACT_PATH="$CURRENT_DIR/bin/tesseract"
      export LD_LIBRARY_PATH="$CURRENT_DIR/bin:$LD_LIBRARY_PATH"
      
      # Start the application
      gunicorn app:app
      
    envVars:
      - key: RENDER
        value: "true"
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: TESSDATA_PREFIX
        sync: true
      - key: TESSERACT_PATH
        sync: true
      - key: LD_LIBRARY_PATH
        sync: true
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_KEY
        sync: false
      - key: SMTP_SERVER
        sync: false
      - key: SMTP_PORT
        sync: false
      - key: SMTP_USERNAME
        sync: false
      - key: SMTP_PASSWORD
        sync: false
      - key: ADMIN_EMAIL
        sync: false

  # Worker Service
  - type: worker
    name: menu-worker
    env: python
    buildCommand: |
      echo "Starting worker build process..."
      
      # Debug: Show current state
      echo "Initial environment:"
      pwd
      ls -la
      echo "PATH: $PATH"
      
      # Install system packages
      echo "Installing system packages..."
      sudo apt-get update
      sudo apt-get install -y tesseract-ocr tesseract-ocr-eng libtesseract-dev libleptonica-dev poppler-utils
      
      # Create our local directories
      echo "Setting up local directories..."
      mkdir -p bin
      mkdir -p share/tessdata
      
      # Copy Tesseract binary and dependencies
      echo "Copying Tesseract files..."
      TESSERACT_BIN=$(which tesseract)
      if [ -z "$TESSERACT_BIN" ]; then
        echo "❌ Tesseract not found after installation"
        exit 1
      fi
      
      echo "Found Tesseract at: $TESSERACT_BIN"
      cp $TESSERACT_BIN bin/
      chmod +x bin/tesseract
      
      # Copy all required shared libraries
      echo "Copying shared libraries..."
      ldd $TESSERACT_BIN | grep "=> /" | awk '{print $3}' | while read -r lib; do
        cp -v "$lib" bin/
      done
      
      # Copy language data
      echo "Copying language data..."
      cp -r /usr/share/tesseract-ocr/*/tessdata/* share/tessdata/
      
      # Set up environment
      echo "Setting up environment..."
      CURRENT_DIR=$(pwd)
      echo "TESSDATA_PREFIX=$CURRENT_DIR/share/tessdata" >> $RENDER_ENV_FILE
      echo "TESSERACT_PATH=$CURRENT_DIR/bin/tesseract" >> $RENDER_ENV_FILE
      echo "LD_LIBRARY_PATH=$CURRENT_DIR/bin:$LD_LIBRARY_PATH" >> $RENDER_ENV_FILE
      
      # Export for current session
      export TESSDATA_PREFIX="$CURRENT_DIR/share/tessdata"
      export TESSERACT_PATH="$CURRENT_DIR/bin/tesseract"
      export LD_LIBRARY_PATH="$CURRENT_DIR/bin:$LD_LIBRARY_PATH"
      
      # Install Python dependencies
      echo "Installing Python dependencies..."
      pip install -r requirements.txt
      
      # Test with Python
      echo "Testing with Python..."
      python test_tesseract.py
      
      echo "Worker build process complete!"
      
    startCommand: |
      echo "Starting worker..."
      echo "Current environment:"
      env | grep -E 'TESSERACT|TESSDATA|LD_LIBRARY'
      
      # Ensure environment is set
      CURRENT_DIR=$(pwd)
      export TESSDATA_PREFIX="$CURRENT_DIR/share/tessdata"
      export TESSERACT_PATH="$CURRENT_DIR/bin/tesseract"
      export LD_LIBRARY_PATH="$CURRENT_DIR/bin:$LD_LIBRARY_PATH"
      
      # Start the worker
      python worker.py
      
    envVars:
      - key: RENDER
        value: "true"
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: TESSDATA_PREFIX
        sync: true
      - key: TESSERACT_PATH
        sync: true
      - key: LD_LIBRARY_PATH
        sync: true
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_KEY
        sync: false
      - key: SMTP_SERVER
        sync: false
      - key: SMTP_PORT
        sync: false
      - key: SMTP_USERNAME
        sync: false
      - key: SMTP_PASSWORD
        sync: false 